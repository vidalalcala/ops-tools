- name: Create a docker volume for mysql data
  docker_volume:
    name: "{{ mysql_docker_volume }}"

- name: Start MySQL service
  docker_container:
    name: mysql_db
    image: mysql/mysql-server:8.0
    command: ["--log-bin={{ mysql_container_path }}/mysql-bin.log",
              "--log-bin-index={{ mysql_container_path }}/bin-log.index",
              "--max_binlog_size=100M",
              "--binlog_format=row",
              "--local_infile=1"]
    state: started
    env:
      MYSQL_ROOT_PASSWORD: "{{ mysql_admin_credentials.root_password }}"
      MYSQL_ROOT_HOST: "%"
    ports:
      - "{{ mysql_port }}:3306"
    exposed_ports:
      - "3306"
    mounts:
      - source: "{{ mysql_docker_volume }}"
        target: "{{ mysql_container_path }}"
  register: mysql_docker_register
  no_log: true

- name: Ensure mysql user is present.
  mysql_user:
    name: "{{ mysql_admin_credentials.name }}"
    password: "{{ mysql_admin_credentials.password }}"
    priv: '*.*:ALL,GRANT'
    state: present
    host: "%"
    login_user: root
    login_password: "{{ mysql_admin_credentials.root_password }}"
    login_port: "{{ mysql_port }}"
    login_host: "{{ minikube_ip }}"
  when: mysql_admin_credentials.name != "root"
  register: task_result
  retries: 40
  delay: 6
  until: task_result is not failed
  no_log: true
